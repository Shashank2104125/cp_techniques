vector<int> LPS(int n,string& p){
        vector<int> lps(n,0);
        int len=0;
        int i=1;
        while(i<n){
            if(p[i]==p[len]){
                len++;
                lps[i]=len;
                i++;
            }
            else if(len==0){
                lps[i]=0;
                i++;
            }else{
                len=lps[len-1];
            }
        }
        return lps;
    }

    bool KMP(string& pattern, string& text){
    int n=pattern.size();
    vector<int> lps=LPS(n,pattern);
    int i=0;int j=0;
    while(i<text.size()){
        if(text[i]==pattern[j]) {i++; j++;}
        if(j==n) {return true; } // main part
        else if(text[i]!=pattern[j]){
            if(j==0) i++;
            else{
                j=lps[j-1];
            }  
        }
    }
    return false;
    }
