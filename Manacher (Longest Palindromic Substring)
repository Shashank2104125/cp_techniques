#include <bits/stdc++.h>
using namespace std;
#define ll long long

struct Manacher {
    vector<int> p;

    void run_manacher(string s) {
        int n = s.size();
        p.assign(n, 1);
        int l = 1, r = 1;
        for (int i = 1; i < n; i++) {
            p[i] = max(0, min(r - i, p[l + r - i]));
            while (i + p[i] < n && i - p[i] >= 0 && s[i + p[i]] == s[i - p[i]]) {
                p[i]++;
            }
            if (i + p[i] > r) {
                l = i - p[i];
                r = i + p[i];
            }
        }
    }

    void build(string s) {
        string t;
        for (auto e : s) t += "#" + string(1, e);
        t += "#";
        run_manacher(t);
    }

    int longest_palindrome(int cen,bool odd){
        int pos=2*cen+1+(!odd);
        return p[pos]-1;
    }
};

int main() {
    string s;
    cin >> s;
    Manacher m;
    m.build(s);
    int tar_ind=0;
    int mx=0;
    bool odd=true;
    vector<int> t=m.p;
    // for(auto e:t) cout<<e-1<<" ";
    // cout<<endl;
    for(int i=1;i<t.size()-1;i++){
        if(t[i]>mx){
            mx=t[i]-1;
            tar_ind=i;
        }
    }
    string ans;
    //cout<<tar_ind<<endl;
    if(tar_ind%2){
       ans=s.substr((tar_ind/2)-(mx/2),mx);
    }else{
       ans=s.substr((tar_ind/2-1)-(mx/2-1),mx);
    }
    cout<<ans<<endl;
    return 0;
}
